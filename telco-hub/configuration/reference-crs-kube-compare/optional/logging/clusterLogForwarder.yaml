---
# ClusterLogForwarder for Telco Hub
# Forwards audit and infrastructure logs to Kafka with hub-specific labeling
apiVersion: observability.openshift.io/v1
kind: ClusterLogForwarder
metadata:
  name: instance
  namespace: openshift-logging
  annotations:
    # Deploy after cluster logging operator is ready
    argocd.argoproj.io/sync-wave: "-30"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    # Ignore controller-managed status differences in ArgoCD
    argocd.argoproj.io/compare-options: IgnoreExtraneous
spec:
  # Filters add metadata labels to log records for identification
  {{- if .spec.filters }}
  filters:
    {{- .spec.filters | toYaml | nindent 2 }}
  {{- end }}

  # Output destinations for log forwarding
  outputs:
  - name: hub-kafka-output
    type: kafka
    kafka:
      # Kafka broker endpoint -> update for your environment (e.g., tcp://$kafka-server:9092/endpoint)!
      url: "^(tcp|http|https)://.*$"

  # Pipelines define which logs go where with what processing
  pipelines:
  -   # Apply labeling filter to identify log source. NOTE: filterRefs MUST be first
    # so that the order matches what is in the applied CR (avoiding diffs with cluster-compare tool).
    {{- if .filterRefs }}
    filterRefs:
    {{- .filterRefs | toYaml | nindent 4 }}
    {{- else }}
    filterRefs:
    - telco-hub-labels
    {{- end }}
    # Log types to forward (excludes application logs for hub). NOTE: inputRefs second
    # so that the order matches what is in the applied CR (avoiding diffs with cluster-compare tool).
    inputRefs:
    - audit           # OpenShift API audit logs
    - infrastructure  # Container runtime and system logs
    name: telco-hub-logs
    # Where to send the logs
    outputRefs:
    - hub-kafka-output

  # Service account for log collection
  serviceAccount:
    name: collector
